# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: pages-build-deployment

on:
  push:
    branches: [ master ]
    tags:
      - v*

  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Image name
  IMAGE_NAME: bfbanv2-frontend

jobs:
  build:
    runs-on: ubuntu-latest

    # 该项目请使用指定的node
    # Use the specified node for this project
    strategy:
      matrix:
        node-version: [ 16.0.0 ]

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install
      working-directory: ./front
    - run: npm run build:production --if-present
      working-directory: ./front

    - name: Commit changes
      uses: JamesIves/github-pages-deploy-action@v4.3.3
      with:
        branch: gh-pages # The branch the action should deploy to.
        folder: './front/dist'
        commit-message: 'build front'
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

    - name: Build image
      run: docker build . --file nginx.Dockerfile --tag $IMAGE_NAME
      working-directory: ./front

    - name: Log into registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      working-directory: ./front

    - name: Push image
      run: |
        IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        # Use Docker `latest` tag convention
        [ "$VERSION" == "main" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
      working-directory: ./front

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ref: gh-pages

    - name: Deploy to netlify
      uses: netlify/actions/cli@master
      with:
        args: deploy --dir=public --prod
      env:
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

    - name: Restart service in docker
      uses: fjogeleit/http-request-action@v1
      with:
        url: ${{ secrets.FRONT_UPDATE_URL }}
        method: 'POST'
        timeout: 90000
